# This is Git's per-user configuration file.
# It lives at ~/.gitconfig
[user]
        name = <your name>
        email = <your email>
[alias]
        pep8 = !git status -s | egrep -v '^[[:space:]]*?[D]' | awk '{print $2}' | grep '.py' | xargs pep8 -r --ignore=E501,E128
        pyflakes = !git status -s | egrep -v '^[[:space:]]*?[D]' | awk '{print $2}' | grep '.py' | xargs pyflakes
        #flake8 = !git status -s | egrep -v '^[[:space:]]+?[D]' | awk '{print $2}' | grep '.py' | xargs flake8 --ignore=E501,E128
        #lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
        # this second lg form came from: http://blog.izs.me/page/3 (01/2013)
        lg = log --graph --pretty=format:'%Cred%h%Creset %C(yellow)%an%d%Creset %s %Cgreen(%cr)%Creset' --date=relative
        ; from http://www.jukie.net/bart/blog/pimping-out-git-log, with author displayed
        lgb = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --branches
        lga = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative  --all
        lgba = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --branches --all
        ds = diff --staged
        d = diff
        s = status
        a = add
        ap = add -p
        grepout = "!git checkout $(git branch | grep -i '$1')"
        # aliases from http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/
        # List commits showing changed files
        ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
        mvim = !vim -p `git status --porcelain | awk {'print $2'}`
        undo-commit = reset --soft HEAD^
        diff-branch = "!git diff $(git rev-parse --abbrev-ref HEAD) --not $1"
        clean-finished-branches = "!git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}' | xargs git branch -D"
[color]
    diff = auto
[init]
    templatedir = ~/.git_template
[push]
    default = current
[core]
    excludesfile = ~/.gitignore
[flake8]
    # check all tracked files (instead of only staged files)
    lazy = true
    # prevent commits if yer shit is fugly
    #strict = true
